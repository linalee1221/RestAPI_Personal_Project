{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TutorialDataService from '@/services/TutorialDataService';\nexport default {\n  // 첫화면 : http://localhost:8080\n  // 전체목록 화면 표시\n  name: \"tutorials-list\",\n  data: function data() {\n    //tutorials 객체, 변수들 초기화\n    return {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      title: \"\"\n    };\n  },\n  methods: {\n    // 전체 목록 조회 메소드\n    retrieveTutorials: function retrieveTutorials() {\n      var _this = this;\n\n      // 백엔드(spring)쪽으로 전체 데이터 요청\n      TutorialDataService.getAll() // 성공하면 then으로 들어옴\n      // response : 헤더(상태정보,쿠키등), 바디(json)\n      // data : tutorial 객체(백엔드에서 전송됨)\n      .then(function (response) {\n        _this.tutorials = response.data; // 데이터 잘 들어왔는지 로그 확인\n\n        console.log(response.data);\n      }) // 실패하면 에러 출력\n      .catch(function (e) {\n        console.log(e);\n      });\n    },\n    // 목록 삭제 후 화면 다시 로딩할때 사용할 메소드\n    // 새로고침 메소드\n    refreshList: function refreshList() {\n      this.currentTutorial = null;\n      this.currentIndex = -1;\n      this.retrieveTutorials();\n    },\n    // vue의 data 변수에 값을 저장하는 메소드\n    // 클릭했을때 현재값을 저장함\n    setActiveTutorial: function setActiveTutorial(tutorial, index) {\n      this.currentTutorial = tutorial;\n      this.currentIndex = index;\n    },\n    // 모든 목록 삭제 메소드\n    removeAllTutorials: function removeAllTutorials() {\n      var _this2 = this;\n\n      // 백엔드쪽으로(spring) 전체 데이터 삭제 요청\n      TutorialDataService.deleteAll() // 성공하면 then 으로 들어옴\n      .then(function (response) {\n        console.log(response.data); // 모든 데이터 삭제했으므로 새로고침 메소드 호출\n\n        _this2.refreshList();\n      }) // 실패하면 catch로 들어옴\n      .catch(function (e) {\n        console.log(e);\n      });\n    },\n    // 제목 검색을 위한 메소드\n    searchTitle: function searchTitle() {\n      var _this3 = this;\n\n      // 백엔드(spring)쪽으로 제목(title) 데이터를 요청\n      TutorialDataService.findByTitle(this.title) // 성공하면 then으로 들어옴\n      .then(function (response) {\n        // 백엔드(spring)쪽에서 받은 데이터를\n        // vue의 data 변수(tutorials)에 넣음\n        _this3.tutorials = response.data;\n        console.log(response.data);\n      });\n    }\n  },\n  // 최초 화면이 로딩될때(뜰때) 실행되는 이벤트\n  mounted: function mounted() {\n    // 전체 목록 가져오기 메소드 호출\n    this.retrieveTutorials();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;EACA;EACA;EACAA,sBAHA;EAIAC,IAJA,kBAIA;IACA;IACA;MACAC,aADA;MAEAC,qBAFA;MAGAC,gBAHA;MAIAC;IAJA;EAMA,CAZA;EAaAC;IACA;IACAC,iBAFA,+BAEA;MAAA;;MACA;MACAC,6BACA;MACA;MACA;MAHA,CAIAC,IAJA,CAIA;QACA,gCADA,CAEA;;QACAC;MACA,CARA,EASA;MATA,CAUAC,KAVA,CAUA;QACAD;MACA,CAZA;IAaA,CAjBA;IAkBA;IACA;IACAE,WApBA,yBAoBA;MACA;MACA;MACA;IACA,CAxBA;IAyBA;IACA;IACAC,iBA3BA,6BA2BAC,QA3BA,EA2BAC,KA3BA,EA2BA;MACA;MACA;IACA,CA9BA;IA+BA;IACAC,kBAhCA,gCAgCA;MAAA;;MACA;MACAR,gCACA;MADA,CAEAC,IAFA,CAEA;QACAC,2BADA,CAEA;;QACA;MACA,CANA,EAOA;MAPA,CAQAC,KARA,CAQA;QACAD;MACA,CAVA;IAWA,CA7CA;IA8CA;IACAO,WA/CA,yBA+CA;MAAA;;MACA;MACAT,4CACA;MADA,CAEAC,IAFA,CAEA;QACA;QACA;QACA;QACAC;MACA,CAPA;IAQA;EAzDA,CAbA;EAwEA;EACAQ,OAzEA,qBAyEA;IACA;IACA;EACA;AA5EA","names":["name","data","tutorials","currentTutorial","currentIndex","title","methods","retrieveTutorials","TutorialDataService","then","console","catch","refreshList","setActiveTutorial","tutorial","index","removeAllTutorials","searchTitle","mounted"],"sourceRoot":"src/components/tutorials","sources":["TutorialsList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-3 list row\">\r\n      <!-- search 관련 div 시작 -->\r\n      <div class=\"col-md-8\">\r\n          <div class=\"input-group mb-3\">\r\n              <!-- 검색 입력 박스 -->\r\n              <input type=\"text\" \r\n                    class=\"form-control\"\r\n                    placeholder=\"Search by title\"\r\n                    v-model=\"title\"\r\n                >\r\n                <!-- 검색 버튼 -->\r\n                <div class=\"input-group-append\">\r\n                    <button class=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        @click=\"searchTitle\"\r\n                    >\r\n                        Search\r\n                    </button>\r\n                </div>\r\n          </div>\r\n      </div>\r\n      <!-- search 관련 div 끝 -->\r\n\r\n      <!-- 목록을 보여주는 div 시작 -->\r\n      <div class=\"col-md-6\">\r\n          <h4>Tutorials List</h4>\r\n          <!-- 제목(title) 목록 -->\r\n          <ul class=\"list-group\">\r\n              <li class=\"list-group-item\"\r\n                :class=\"{ active: index == currentIndex }\"\r\n                v-for=\"(tutorial, index) in tutorials\"\r\n                :key=\"index\"\r\n                @click=\"setActiveTutorial(tutorial,index)\"\r\n                >\r\n                {{ tutorial.title }}\r\n              </li>\r\n          </ul>\r\n          <!-- 모든 목록 삭제 버튼 -->\r\n          <button class=\"m-3 btn btn-sm btn-danger\"\r\n                @click=\"removeAllTutorials\">\r\n            Remove All\r\n          </button>\r\n      </div>\r\n      <!-- 목록을 보여주는 div 끝 -->\r\n\r\n      <!-- 상세 정보를 보여주는 div 시작 -->\r\n      <div class=\"col-md-6\">\r\n          <!-- currentTutorial != null 이면 -->\r\n          <div v-if=\"currentTutorial\">\r\n              <h4>Tutorial</h4>\r\n              <div>\r\n                  <label><strong>Title:</strong></label>\r\n                    {{ currentTutorial.title }}\r\n              </div>\r\n\r\n              <div>\r\n                  <label><strong>Description:</strong></label>\r\n                  {{ currentTutorial.description }}\r\n              </div>\r\n\r\n              <div>\r\n                  <label><strong>Status:</strong></label>\r\n                  {{ (currentTutorial.published==\"Y\") ? \r\n                        \"Published\" : \"Pending\" }}\r\n              </div>\r\n\r\n              <!-- link 추가 -->\r\n              <router-link :to=\"'/tutorials/' + currentTutorial.id\"\r\n                    class=\"badge badge-primary\"\r\n              >\r\n                Edit\r\n              </router-link>\r\n          </div>\r\n          <!-- currentTutorial == null 이면 -->\r\n          <div v-else>\r\n              <br>\r\n              <p>Please click on a Tutorial...</p>\r\n          </div>\r\n      </div>\r\n      <!-- 상세 정보를 보여주는 div 끝 -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TutorialDataService from '@/services/TutorialDataService';\r\nexport default {\r\n    // 첫화면 : http://localhost:8080\r\n    // 전체목록 화면 표시\r\n    name: \"tutorials-list\",\r\n    data() {\r\n        //tutorials 객체, 변수들 초기화\r\n        return {\r\n            tutorials: [],\r\n            currentTutorial: null,\r\n            currentIndex: -1,\r\n            title: \"\"\r\n        };\r\n    },\r\n    methods: {\r\n        // 전체 목록 조회 메소드\r\n        retrieveTutorials() {\r\n            // 백엔드(spring)쪽으로 전체 데이터 요청\r\n            TutorialDataService.getAll()\r\n            // 성공하면 then으로 들어옴\r\n            // response : 헤더(상태정보,쿠키등), 바디(json)\r\n            // data : tutorial 객체(백엔드에서 전송됨)\r\n            .then( response => {\r\n                this.tutorials = response.data\r\n                // 데이터 잘 들어왔는지 로그 확인\r\n                console.log(response.data);\r\n            })\r\n            // 실패하면 에러 출력\r\n            .catch( e => {\r\n                console.log(e);\r\n            });\r\n        },\r\n        // 목록 삭제 후 화면 다시 로딩할때 사용할 메소드\r\n        // 새로고침 메소드\r\n        refreshList() {\r\n            this.currentTutorial = null;\r\n            this.currentIndex = -1;\r\n            this.retrieveTutorials();\r\n        },\r\n        // vue의 data 변수에 값을 저장하는 메소드\r\n        // 클릭했을때 현재값을 저장함\r\n        setActiveTutorial(tutorial, index) {\r\n            this.currentTutorial = tutorial;\r\n            this.currentIndex = index;\r\n        },\r\n        // 모든 목록 삭제 메소드\r\n        removeAllTutorials() {\r\n            // 백엔드쪽으로(spring) 전체 데이터 삭제 요청\r\n            TutorialDataService.deleteAll()\r\n            // 성공하면 then 으로 들어옴\r\n            .then(response => {\r\n                console.log(response.data);\r\n                // 모든 데이터 삭제했으므로 새로고침 메소드 호출\r\n                this.refreshList();\r\n            })\r\n            // 실패하면 catch로 들어옴\r\n            .catch( e => {\r\n                console.log(e);\r\n            })\r\n        },\r\n        // 제목 검색을 위한 메소드\r\n        searchTitle() {\r\n            // 백엔드(spring)쪽으로 제목(title) 데이터를 요청\r\n            TutorialDataService.findByTitle(this.title)\r\n            // 성공하면 then으로 들어옴\r\n            .then(response => {\r\n                // 백엔드(spring)쪽에서 받은 데이터를\r\n                // vue의 data 변수(tutorials)에 넣음\r\n                this.tutorials = response.data;\r\n                console.log(response.data);\r\n            })\r\n        }\r\n    },\r\n    // 최초 화면이 로딩될때(뜰때) 실행되는 이벤트\r\n    mounted()  {\r\n        // 전체 목록 가져오기 메소드 호출\r\n        this.retrieveTutorials();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    .list {\r\n        text-align: left;\r\n        max-width: 750px;\r\n        margin: auto;\r\n    }\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}