{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FreeDataService from \"@/services/FreeDataService\";\nexport default {\n  name: \"edit-free\",\n  data: function data() {\n    return {\n      currentFree: null,\n      message: ''\n    };\n  },\n  methods: {\n    getFree: function getFree(id) {\n      var _this = this;\n\n      FreeDataService.get(id).then(function (response) {\n        _this.currentFree = response.data;\n      }).catch(function (e) {\n        alert(e);\n      });\n    },\n    updateFree: function updateFree() {\n      var _this2 = this;\n\n      FreeDataService.update(this.currentFree.id, this.currentFree).then(function () {\n        _this2.message = alert('The free content was updated successfully!');\n\n        _this2.$router.push({\n          name: 'frees'\n        });\n      }).catch(function (e) {\n        alert(e);\n      });\n    },\n    deleteFree: function deleteFree() {\n      var _this3 = this;\n\n      FreeDataService.delete(this.currentFree.id).then(function () {\n        _this3.message = alert('The free content was deleted successfully!');\n\n        _this3.$router.push({\n          name: 'frees'\n        });\n      }).catch(function (e) {\n        alert(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getFree(this.$route.params.id);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AAEA;EACAA,iBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,iBADA;MAEAC;IAFA;EAIA,CAPA;EAQAC;IAEAC,OAFA,mBAEAC,EAFA,EAEA;MAAA;;MAEAC,wBAEAC,IAFA,CAEA;QACA;MACA,CAJA,EAMAC,KANA,CAMA;QACAC;MACA,CARA;IASA,CAbA;IAeAC,UAfA,wBAeA;MAAA;;MAEAJ,gBACAK,MADA,CACA,mBADA,EACA,gBADA,EAGAJ,IAHA,CAGA;QACA;;QACA;UAAAR;QAAA;MACA,CANA,EAQAS,KARA,CAQA;QACAC;MACA,CAVA;IAWA,CA5BA;IA8BAG,UA9BA,wBA8BA;MAAA;;MAEAN,4CAEAC,IAFA,CAEA;QACA;;QACA;UAAAR;QAAA;MACA,CALA,EAMAS,KANA,CAMA;QACAC;MACA,CARA;IASA;EAzCA,CARA;EAoDAI,OApDA,qBAoDA;IACA;EACA;AAtDA","names":["name","data","currentFree","message","methods","getFree","id","FreeDataService","then","catch","alert","updateFree","update","deleteFree","mounted"],"sourceRoot":"src/components/free","sources":["EditFree.vue"],"sourcesContent":["<template>\r\n\r\n  <div class=\"container mt-3\" v-if=\"currentFree\">\r\n\r\n    <div class=\"mb-3\">\r\n      <label for=\"title\" class=\"form-label\">TITLE</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"title\" required name=\"title\" v-model=\"currentFree.title\">\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"content\" class=\"form-label\">CONTENT</label>\r\n      <input type=\"content\" class=\"form-control\" id=\"content\" required name=\"content\" v-model=\"currentFree.content\">\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"writer\" class=\"form-label\">WRITER</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"writer\" required name=\"writer\" v-model=\"currentFree.writer\">\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <button @click=\"updateFree\" class=\"btn btn-primary me-3\">Update</button>\r\n      <button @click=\"deleteFree\" class=\"btn btn-danger\">Delete</button>\r\n    </div>\r\n\r\n    <div class=\"alert alert-success\" role=\"alert\" v-if=\"message\">\r\n      {{ message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport FreeDataService from \"@/services/FreeDataService\";\r\n\r\nexport default {\r\n  name: \"edit-free\",\r\n  data() {\r\n    return {\r\n      currentFree: null,\r\n      message: ''\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    getFree(id) {\r\n\r\n      FreeDataService.get(id)\r\n\r\n        .then(response => {\r\n          this.currentFree = response.data;\r\n        })\r\n\r\n        .catch(e => {\r\n          alert(e);\r\n        })\r\n    },\r\n\r\n    updateFree() {\r\n\r\n      FreeDataService\r\n        .update(this.currentFree.id, this.currentFree)\r\n\r\n        .then(() => {\r\n          this.message = alert('The free content was updated successfully!');\r\n          this.$router.push({ name: 'frees' });\r\n        })\r\n\r\n        .catch(e => {\r\n          alert(e);\r\n        })\r\n    },\r\n\r\n    deleteFree() {\r\n\r\n      FreeDataService.delete(this.currentFree.id)\r\n\r\n        .then(() => {\r\n          this.message = alert('The free content was deleted successfully!');\r\n          this.$router.push({ name: 'frees' });\r\n        })\r\n        .catch(e => {\r\n          alert(e);\r\n        })\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.getFree(this.$route.params.id);\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}