{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TutorialDataService from \"../../services/TutorialDataService\"; // 아래 eslint 적용 예외 처리\n\n/* eslint-disable */\n\nexport default {\n  name: \"tutorial\",\n  data: function data() {\n    return {\n      currentTutorial: null,\n      message: ''\n    };\n  },\n  methods: {\n    // id로 tutorial 데이터 상세 조회\n    // 백엔드쪽에(spring) 요청\n    getTutorial: function getTutorial(id) {\n      var _this = this;\n\n      // id로 검색을 백엔드쪽에(spring) 요청하는 메소드\n      TutorialDataService.get(id) // 성공하면 then 으로 들어옴\n      .then(function (response) {\n        // response.data : 백엔드쪽에서 온 데이터\n        // response.data : tutorial 객체\n        _this.currentTutorial = response.data;\n        console.log(response.data);\n      }) // 실패하면 catch로 들어옴\n      .catch(function (e) {\n        console.log(e);\n      });\n    },\n    // tutorial 데이터 수정 메소드 호출\n    updateTutorial: function updateTutorial() {\n      var _this2 = this;\n\n      // 백엔드쪽에(spring) id로 검색해서 데이터 수정 요청\n      TutorialDataService.update(this.currentTutorial.id, this.currentTutorial) // 성공하면 then으로 들어옴(백엔드:응답보내줌)\n      .then(function (response) {\n        console.log(response.data);\n        _this2.message = 'The tutorial was updated successfully!';\n      }) // 실패하면 catch로 들어옴\n      .catch(function (e) {\n        console.log(e);\n      });\n    },\n    // 백엔드쪽에(spring) 데이터 삭제 요청 메소드\n    deleteTutorial: function deleteTutorial() {\n      var _this3 = this;\n\n      // 백엔드쪽에(spring) id로 데이터 삭제 요청\n      TutorialDataService.delete(this.currentTutorial.id) // 성공하면 then으로 응답이 들어옴(벡엔드에서 응답)\n      .then(function (response) {\n        console.log(response.data); // TutorialsList 로 이동( 첫화면 )\n        // this.$router.push(갈 페이지)\n\n        _this3.$router.push({\n          name: \"tutorials\"\n        });\n      }) // 실패하면 catch로 응답이 들어옴\n      .catch(function (e) {\n        console.log(e);\n      });\n    },\n    // tutorial 테이블 Published 컬럼 : 'Y' <-> 'N'\n    // Published 컬럼을 수정하는 메소드\n    updatePublished: function updatePublished(status) {// Todo: 나중에 천천히 작성\n    }\n  },\n  // vue 화면이 로딩될때(뜰때) 자동으로 실행되는 이벤트\n  mounted: function mounted() {\n    this.message = ''; // router/index.js => path: '/tutorials/:id'\n\n    this.getTutorial(this.$route.params.id);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA,gCACA,oCADA,C,CAGA;;AACA;;AACA;EACAA,gBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,qBADA;MAEAC;IAFA;EAIA,CAPA;EAQAC;IACA;IACA;IACAC,WAHA,uBAGAC,EAHA,EAGA;MAAA;;MACA;MACAC,4BACA;MADA,CAEAC,IAFA,CAEA;QACA;QACA;QACA;QACAC;MACA,CAPA,EAQA;MARA,CASAC,KATA,CASA;QACAD;MACA,CAXA;IAYA,CAjBA;IAkBA;IACAE,cAnBA,4BAmBA;MAAA;;MACA;MACAJ,oBACAK,MADA,CACA,uBADA,EACA,oBADA,EAEA;MAFA,CAGAJ,IAHA,CAGA;QACAC;QACA,iBACA,wCADA;MAEA,CAPA,EAQA;MARA,CASAC,KATA,CASA;QACAD;MACA,CAXA;IAYA,CAjCA;IAkCA;IACAI,cAnCA,4BAmCA;MAAA;;MACA;MACAN,oDACA;MADA,CAEAC,IAFA,CAEA;QACAC,2BADA,CAEA;QACA;;QACA;UAAAT;QAAA;MACA,CAPA,EAQA;MARA,CASAU,KATA,CASA;QACAD;MACA,CAXA;IAYA,CAjDA;IAkDA;IACA;IACAK,eApDA,2BAoDAC,MApDA,EAoDA,CACA;IACA;EAtDA,CARA;EAiEA;EACAC,OAlEA,qBAkEA;IACA,kBADA,CAEA;;IACA;EACA;AAtEA","names":["name","data","currentTutorial","message","methods","getTutorial","id","TutorialDataService","then","console","catch","updateTutorial","update","deleteTutorial","updatePublished","status","mounted"],"sourceRoot":"src/components/tutorials","sources":["Tutorial.vue"],"sourcesContent":["<template>\r\n  <!-- currentTutorial != null 이면 -->\r\n  <div v-if=\"currentTutorial\" class=\"container mt-3 edit-form\">\r\n      <h4>Tutorial</h4>\r\n      <!-- form 시작 -->\r\n      <form>\r\n          <div class=\"form-group\">\r\n              <label for=\"title\">Title</label>\r\n              <input type=\"text\" \r\n                    class=\"form-control\"\r\n                    id=\"title\"\r\n                    v-model=\"currentTutorial.title\"\r\n                >\r\n          </div>          \r\n\r\n          <div class=\"form-group\">\r\n              <label for=\"description\">Description</label>\r\n              <input type=\"text\" \r\n                    class=\"form-control\"\r\n                    id=\"description\"\r\n                    v-model=\"currentTutorial.description\"\r\n                >\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n              <label><strong>Status:</strong></label>\r\n              {{ (currentTutorial==\"Y\") ?\r\n                    \"Published\":\"Pending\" }}\r\n          </div>\r\n      </form>\r\n      <!-- form 끝 -->\r\n\r\n      <!-- 버튼 시작 -->\r\n        <!-- click시 published == \"Y\" -->\r\n        <!-- 다시 click시 published == \"N\" -->\r\n          <button class=\"badge badge-primary mr-2\"\r\n                v-if='currentTutorial.published==\"Y\"'\r\n                @click=\"updatePublished(false)\"\r\n          >\r\n            UnPublish\r\n          </button>\r\n          <button v-else class=\"badge badge-primary mr-2\"\r\n                @click=\"updatePublished(true)\"\r\n          >\r\n            Publish\r\n          </button>\r\n        <!-- delete 버튼 -->\r\n            <button class=\"badge badge-danger mr-2\"\r\n                @click=\"deleteTutorial\"    \r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        <!-- update 버튼 -->\r\n            <button type=\"submit\"\r\n                class=\"badge badge-success\"\r\n                @click=\"updateTutorial\"    \r\n            >\r\n                Update\r\n            </button>\r\n      <!-- 버튼 끝 -->\r\n            <p>{{ message }}</p>\r\n  </div>\r\n\r\n  <!-- currentTutorial == null 이면 -->\r\n  <div v-else>\r\n      <br>\r\n      <p>Please click on a Tutorial...</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TutorialDataService \r\n    from \"../../services/TutorialDataService\";\r\n\r\n// 아래 eslint 적용 예외 처리\r\n/* eslint-disable */\r\nexport default {\r\n    name: \"tutorial\",\r\n    data() {\r\n        return {\r\n            currentTutorial: null,\r\n            message: ''\r\n        };\r\n    },\r\n    methods: {\r\n        // id로 tutorial 데이터 상세 조회\r\n        // 백엔드쪽에(spring) 요청\r\n        getTutorial(id) {\r\n            // id로 검색을 백엔드쪽에(spring) 요청하는 메소드\r\n            TutorialDataService.get(id)\r\n            // 성공하면 then 으로 들어옴\r\n            .then(response => {\r\n                // response.data : 백엔드쪽에서 온 데이터\r\n                // response.data : tutorial 객체\r\n                this.currentTutorial = response.data;\r\n                console.log(response.data);\r\n            })\r\n            // 실패하면 catch로 들어옴\r\n            .catch( e => {\r\n                console.log(e);\r\n            })\r\n        },\r\n        // tutorial 데이터 수정 메소드 호출\r\n        updateTutorial() {\r\n            // 백엔드쪽에(spring) id로 검색해서 데이터 수정 요청\r\n            TutorialDataService\r\n            .update(this.currentTutorial.id, this.currentTutorial)\r\n            // 성공하면 then으로 들어옴(백엔드:응답보내줌)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                this.message \r\n                = 'The tutorial was updated successfully!'\r\n            })\r\n            // 실패하면 catch로 들어옴\r\n            .catch( e => {\r\n                console.log(e);\r\n            })\r\n        },\r\n        // 백엔드쪽에(spring) 데이터 삭제 요청 메소드\r\n        deleteTutorial() {\r\n            // 백엔드쪽에(spring) id로 데이터 삭제 요청\r\n            TutorialDataService.delete(this.currentTutorial.id)\r\n            // 성공하면 then으로 응답이 들어옴(벡엔드에서 응답)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                // TutorialsList 로 이동( 첫화면 )\r\n                // this.$router.push(갈 페이지)\r\n                this.$router.push({name: \"tutorials\"});\r\n            })\r\n            // 실패하면 catch로 응답이 들어옴\r\n            .catch( e => {\r\n                console.log(e);\r\n            })\r\n        },\r\n        // tutorial 테이블 Published 컬럼 : 'Y' <-> 'N'\r\n        // Published 컬럼을 수정하는 메소드\r\n        updatePublished(status) {\r\n            // Todo: 나중에 천천히 작성\r\n        }\r\n\r\n    },\r\n    // vue 화면이 로딩될때(뜰때) 자동으로 실행되는 이벤트\r\n    mounted() {\r\n        this.message = '';\r\n        // router/index.js => path: '/tutorials/:id'\r\n        this.getTutorial(this.$route.params.id);   \r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    .edit-form {\r\n        max-width: 300px;\r\n        margin: auto;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module"}